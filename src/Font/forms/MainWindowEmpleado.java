package Font.forms;

import Font.presentation.GrafoProductos;
import Font.presentation.MenuBarra;
import Font.presentation.RoundButtons;
import Font.presentation.VentanaPrincipal;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

/**
 * Esta clase y su form son simplemente versiones simplificadas de Main Window para los usuarios tipo
 * empleado, los cuales tendr치n menos funcionalidades disponibles.
 */
public class MainWindowEmpleado extends MainWindow {


    private JPanel panel1;
    private JPanel panelGrafo;
    private JButton menuButton;
    private JPanel panel2;
    private RoundButtons b1;
    private JPanel panelBotones;

    public MainWindowEmpleado(VentanaPrincipal parent) {

        //Inicializaciones
        this.parent = parent;
        miMenuBarra = new MenuBarra(this);
        gf = new GrafoProductos();
        panelGrafo.add(gf);
        gf.setVisible(true);
        actualizarGrafo();

        b1 = new RoundButtons("Ver Similitudes");
        panelBotones.add(b1);
        //A침adir la imagen del carrito
        ImageIcon hamIcon = new ImageIcon("Font/presentation/image_src/menu hamburguesa.png");
        menuButton.setIcon(hamIcon);
        ImageIcon logoIcon = new ImageIcon("Font/presentation/image_src/carritoIcon.png");
        Image logoImage = logoIcon.getImage().getScaledInstance(50, 50, Image.SCALE_SMOOTH); // Redimensionar la imagen
        logoIcon = new ImageIcon(logoImage);
        JLabel logoLabel = new JLabel(logoIcon);
        panel2.add(logoLabel, Component.LEFT_ALIGNMENT);

        //A침adir textos
        logoLabel = new JLabel("Market Planner");
        panel2.add(logoLabel);

        //Determinar el tama침o del boton
        menuButton.setSize(512, 512);


        menuButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JPopupMenu temp = miMenuBarra.getMenu();
                temp.show(menuButton, 0, 0);
            }
        });

        b1.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                gf.cambiarModo();
                actualizarGrafo();


                if (gf.getNextDisplay() == 0) {
                    b1.setText("Ver Similitudes");
                } else {
                    b1.setText("Ver Estanteria");
                }
            }
        });
    }

    @Override
    public JPanel getPanel() {
        return panel1;
    }

    @Override
    public void actualizarGrafo() {
        ArrayList<String> prods = parent.actionGetProductos();
        ArrayList<String> imgs = new ArrayList<>();
        for (String p : prods) {
            imgs.add(parent.actionGetImagen(p));
        }
        gf.actualizarProductos(parent.actionGetProductos(), imgs);
        ArrayList<Integer> sims = new ArrayList<>();
        ArrayList<String> combs = gf.getSimilitudesNecesarias();
        for (int i = 0; i < combs.size(); i += 2) {
            sims.add(parent.actionGetSimilitud(combs.get(i), combs.get(i + 1)));
        }

        gf.actualizarSimilitudesUsadas(sims);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridBagLayout());
        panel1.setBackground(new Color(-467261));
        panelGrafo = new JPanel();
        panelGrafo.setLayout(new BorderLayout(0, 0));
        panelGrafo.setBackground(new Color(-467261));
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panelGrafo, gbc);
        panelBotones = new JPanel();
        panelBotones.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panelBotones.setBackground(new Color(-2238276));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panelBotones, gbc);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new BorderLayout(0, 0));
        panel3.setBackground(new Color(-4869991));
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.BOTH;
        panel1.add(panel3, gbc);
        menuButton = new JButton();
        menuButton.setBackground(new Color(-4869991));
        menuButton.setForeground(new Color(-467261));
        menuButton.setText("");
        panel3.add(menuButton, BorderLayout.EAST);
        panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel2.setBackground(new Color(-4869991));
        panel3.add(panel2, BorderLayout.WEST);
        final Spacer spacer1 = new Spacer();
        panel3.add(spacer1, BorderLayout.CENTER);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

}
